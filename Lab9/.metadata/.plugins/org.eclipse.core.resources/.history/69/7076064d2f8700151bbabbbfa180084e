public class ArrayHelper {
	private int sum;
	private double average;
	private int sum2D;
	private double average2D;
	private int max2D;
	
	ArrayHelper(){
		sum = 0;
		average = 0;
		sum2D = 0;
		average2D = 0;
		max2D = 0;
	}
	public void print2DArray(int[][] array){
		System.out.println("Here is your array: ");
		for (int i = 0; i < array.length; i++){
			System.out.println(array[i]);
		}
		
	}
	public int arraySum(int[] array){
		for (int i = 0; i < array.length; i++){
			sum += array[i];
		}
		return(sum);
	}
	public double arrayAvg(int[] array){
		if (sum != 0){
			arraySum(array);
		}	//in cases where arraySum method has not already been called and sum remains equal to zero
		average = sum / array.length;
		return(average);
	}
	public int arraySum2D(int[][] array){
		for (int i = 0; i < array.length; i++){
			for (int j = 0; j < array[i].length; j++){
				sum2D +=array[i][j];
			}
		}
		return(sum2D);
	}
	public double arrayAvg2D(int[][] array){
		if (sum2D != 0){
			arraySum2D(array);
		}	//in cases where arraySum2D method has not already been called and sum2D remains equal to zero
		average2D = sum2D / (array.length * array[0].length);
		return(average2D);
	}
	public int arrayMax2D(int[][] array){
		max2D = array[0][0];
		for (int i = 0; i < array.length; i ++){
			for (int j = 0; j < array[i].length; j++){
				if (array[i][j] > max2D){
					max2D = array[i][j];
				}
			}
		}
		return(max2D);
	}
}
